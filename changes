diff --git a/onboard/cv/camera.cpp b/onboard/cv/camera.cpp
index 61f89d5..d124ce8 100644
--- a/onboard/cv/camera.cpp
+++ b/onboard/cv/camera.cpp
@@ -31,7 +31,7 @@ Camera::Impl::Impl() {
 	init_params.camera_resolution = sl::RESOLUTION_HD720; // default: 720p
 	init_params.depth_mode = sl::DEPTH_MODE_PERFORMANCE;
 	init_params.coordinate_units = sl::UNIT_METER;
-	init_params.camera_fps = 60;
+	init_params.camera_fps = 15;
 	// TODO change this below?
 	assert(this->zed_.open(init_params) == sl::SUCCESS);
 	std::cout<<"ZED init success\n";
diff --git a/onboard/cv/main.cpp b/onboard/cv/main.cpp
index 0cf7e74..2f4addc 100644
--- a/onboard/cv/main.cpp
+++ b/onboard/cv/main.cpp
@@ -1,4 +1,5 @@
 #include "perception.hpp"
+#include <unistd.h>
 
 using namespace cv;
 using namespace std;
@@ -36,6 +37,7 @@ bool cam_grab_succeed(Camera &cam, int & counter_fail) {
   while (!cam.grab()) {
     cerr << "grab failed once\n";
     counter_fail++;
+    usleep(1000);
     if (counter_fail > 1000000) {
       cerr<<"camera failed\n";
       return false;
diff --git a/onboard/cv/meson_options.txt b/onboard/cv/meson_options.txt
index 3ddc588..9cfb628 100644
--- a/onboard/cv/meson_options.txt
+++ b/onboard/cv/meson_options.txt
@@ -1,3 +1,3 @@
 option('with_zed', type: 'boolean', value : true)
 option('offline_test', type: 'boolean', value: false)
-option('perception_debug', type: 'boolean', value: true)
+option('perception_debug', type: 'boolean', value: false)
diff --git a/onboard/cv/obstacle_detector.cpp b/onboard/cv/obstacle_detector.cpp
index ae6863d..fba0aa6 100644
--- a/onboard/cv/obstacle_detector.cpp
+++ b/onboard/cv/obstacle_detector.cpp
@@ -111,10 +111,10 @@ obstacle_return refine_rt(obstacle_return rt_val, pair<int, float> candidate, Si
 obstacle_return avoid_obstacle_sliding_window(Mat &depth_img_src, Mat &rgb_img, int num_windows, int rover_width ) {
   // filter out nan values. 0.7 and 20 are ZED stero's limits
   Mat depth_img = depth_img_src.clone();
+  patchNaNs(depth_img, 0.0);
   depth_img = max(depth_img, 0.7);
   depth_img = min(depth_img, 20.0);
   depth_img = depth_img(Rect( 0, 450,  1280, 250));
-  patchNaNs(depth_img, 0.0);
   
   blur( depth_img, depth_img, Size( 7, 7 ), Point(-1,-1) );
   Size size = depth_img.size();
diff --git a/onboard/cv/perception.hpp b/onboard/cv/perception.hpp
index 00fc316..f654445 100644
--- a/onboard/cv/perception.hpp
+++ b/onboard/cv/perception.hpp
@@ -1,5 +1,4 @@
 #pragma once
-#define PERCEPTION_DEBUG
 #include <iostream>
 #include <opencv2/opencv.hpp>
 #include "camera.hpp"
diff --git a/onboard/cv/project.ini b/onboard/cv/project.ini
index 8ae9f7a..ccd2dae 100644
--- a/onboard/cv/project.ini
+++ b/onboard/cv/project.ini
@@ -1,3 +1,3 @@
 [build]
 lang=cpp
-deps=rover_msgs,simulators/perception/lib
\ No newline at end of file
+deps=rover_msgs
